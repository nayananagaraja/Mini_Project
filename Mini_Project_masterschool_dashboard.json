{"datasets":[{"name":"abb91c01","displayName":"sales_data_sample","query":"--STEP 1:preview the data\r\nSELECT * FROM sales_data_sample;\r\n\r\n-- STEP 2 : Check for missing values in the dataset using SQL queries.\r\nSELECT \r\n   COUNT(*) AS total_rows,\r\n  SUM(CASE WHEN ORDERNUMBER IS NULL THEN 1 ELSE 0 END) AS ordernumber_nulls,\r\n  SUM(CASE WHEN QUANTITYORDERED IS NULL THEN 1 ELSE 0 END) AS quantityordered_nulls,\r\n  SUM(CASE WHEN PRICEEACH IS NULL THEN 1 ELSE 0 END) AS priceeach_nulls,\r\n  SUM(CASE WHEN SALES IS NULL THEN 1 ELSE 0 END) AS sales_nulls,\r\n  SUM(CASE WHEN ORDERDATE IS NULL THEN 1 ELSE 0 END) AS orderdate_nulls,\r\n  SUM(CASE WHEN PRODUCTCODE IS NULL THEN 1 ELSE 0 END) AS productcode_nulls,\r\n  SUM(CASE WHEN CUSTOMERNAME IS NULL THEN 1 ELSE 0 END) AS customername_nulls,\r\n  SUM(CASE WHEN COUNTRY IS NULL THEN 1 ELSE 0 END) AS country_nulls\r\n  FROM sales_data_sample;\r\n\r\n--Decide on an appropriate strategy based on the extent of missing values and time constraints, such as filtering or basic imputation.\r\nDESCRIBE sales_data_sample;\r\n \r\n--Identify and handle duplicate records using SQL queries with GROUP BY and COUNT(*) or DataFrame methods like dropDuplicates().\r\nSELECT ORDERNUMBER, COUNT(*) AS record_count\r\nFROM sales_data_sample\r\nGROUP BY ORDERNUMBER\r\nHAVING COUNT(*) > 1;\r\n\r\n--Calculate basic descriptive statistics for relevant numerical columns using SQL functions such as COUNT(), AVG(), MIN(), and MAX() or DataFrame methods like describe() to understand the data's distribution.\r\n\r\nSELECT\r\n  COUNT(*) AS total_rows,\r\n  COUNT(DISTINCT ORDERNUMBER) AS unique_orders,\r\n  SUM(SALES) AS revenue,\r\n  AVG(SALES) AS avg_sales,\r\n  MIN(SALES) AS min_sales,\r\n  MAX(SALES) AS max_sales,\r\n  revenue/unique_orders AS average_order_value,\r\n  AVG(QUANTITYORDERED) AS avg_quantity,\r\n  MIN(QUANTITYORDERED) AS min_quantity,\r\n  MAX(QUANTITYORDERED) AS max_quantity\r\nFROM sales_data_sample;\r\n\r\n--Sales Trend Over Time: Extract time components (using ORDERDATE, MONTH_ID, QTR_ID, and YEAR_ID) and aggregate SALES by month or quarter.\r\n --Aggregate Sales by Month\r\n\r\nSELECT \r\n   YEAR_ID AS year,\r\n   MONTH_ID AS month,\r\n   QTR_ID AS quarter,\r\n   SUM(SALES) AS total_sales\r\n   FROM sales_data_sample\r\n   GROUP BY YEAR_ID, MONTH_ID, QTR_ID \r\n   ORDER BY YEAR_ID , MONTH_ID,  QTR_ID;\r\n\r\n   \r\n   \r\n \r\n\r\n\r\n"},{"name":"1d31dd56","displayName":"sales_by_order_number","query":"--STEP 1:preview the data\r\nSELECT * FROM sales_data_sample;\r\n\r\n-- STEP 2 : Check for missing values in the dataset using SQL queries.\r\nSELECT \r\n   COUNT(*) AS total_rows,\r\n  SUM(CASE WHEN ORDERNUMBER IS NULL THEN 1 ELSE 0 END) AS ordernumber_nulls,\r\n  SUM(CASE WHEN QUANTITYORDERED IS NULL THEN 1 ELSE 0 END) AS quantityordered_nulls,\r\n  SUM(CASE WHEN PRICEEACH IS NULL THEN 1 ELSE 0 END) AS priceeach_nulls,\r\n  SUM(CASE WHEN SALES IS NULL THEN 1 ELSE 0 END) AS sales_nulls,\r\n  SUM(CASE WHEN ORDERDATE IS NULL THEN 1 ELSE 0 END) AS orderdate_nulls,\r\n  SUM(CASE WHEN PRODUCTCODE IS NULL THEN 1 ELSE 0 END) AS productcode_nulls,\r\n  SUM(CASE WHEN CUSTOMERNAME IS NULL THEN 1 ELSE 0 END) AS customername_nulls,\r\n  SUM(CASE WHEN COUNTRY IS NULL THEN 1 ELSE 0 END) AS country_nulls\r\n  FROM sales_data_sample;\r\n \r\n--Identify and handle duplicate records using SQL queries with GROUP BY and COUNT(*) or DataFrame methods like dropDuplicates().\r\nSELECT ORDERNUMBER, COUNT(*) AS total_rows\r\nFROM sales_data_sample\r\nGROUP BY ORDERNUMBER\r\nHAVING COUNT(*) > 1;\r\n\r\n--Calculate basic descriptive statistics for relevant numerical columns using SQL functions such as COUNT(), AVG(), MIN(), and MAX() or DataFrame methods like describe() to understand the data's distribution.\r\n\r\nSELECT\r\n  COUNT(*) AS total_rows,\r\n  COUNT(DISTINCT ORDERNUMBER) AS unique_orders,\r\n  SUM(SALES) AS revenue,\r\n  AVG(SALES) AS avg_sales,\r\n  MIN(SALES) AS min_sales,\r\n  MAX(SALES) AS max_sales,\r\n  revenue/unique_orders AS average_order_value,\r\n  AVG(QUANTITYORDERED) AS avg_quantity,\r\n  MIN(QUANTITYORDERED) AS min_quantity,\r\n  MAX(QUANTITYORDERED) AS max_quantity\r\nFROM sales_data_sample;\r\n\r\n--Sales Trend Over Time: Extract time components (using ORDERDATE, MONTH_ID, QTR_ID, and YEAR_ID) and aggregate SALES by month or quarter.\r\n --Aggregate Sales by Month\r\n\r\nSELECT \r\n   YEAR_ID AS year,\r\n   MONTH_ID AS month,\r\n   QTR_ID AS quarter,\r\n   SUM(SALES) AS total_sales\r\n   FROM sales_data_sample\r\n   GROUP BY YEAR_ID, MONTH_ID, QTR_ID \r\n   ORDER BY YEAR_ID , MONTH_ID,  QTR_ID;\r\n\r\n   --Top N Orders by Sales: Group by ORDERNUMBER, sum SALES per order, and sort in descending order to identify the highest-value orders.\r\n   SELECT \r\n  ORDERNUMBER, \r\n  SUM(SALES) AS total_sales\r\nFROM sales_data_sample\r\nGROUP BY \r\n  ORDERNUMBER\r\nORDER BY \r\n  total_sales DESC;\r\n \r\n\r\n\r\n"}],"pages":[{"name":"19dcd210","displayName":"Mini_project_masterschool","layout":[{"widget":{"name":"6e982008","queries":[{"name":"main_query","query":{"datasetName":"abb91c01","fields":[{"name":"year","expression":"`year`"},{"name":"sum(total_sales)","expression":"SUM(`total_sales`)"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"year","scale":{"type":"quantitative"},"displayName":"year"},"y":{"fieldName":"sum(total_sales)","scale":{"type":"quantitative"},"displayName":"Sum of total_sales"}},"frame":{"title":"Total Sales by Year","showTitle":true}}},"position":{"x":0,"y":0,"width":3,"height":6}},{"widget":{"name":"2b3fe2db","queries":[{"name":"main_query","query":{"datasetName":"abb91c01","fields":[{"name":"quarter","expression":"`quarter`"},{"name":"sum(total_sales)","expression":"SUM(`total_sales`)"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"quarter","scale":{"type":"categorical","sort":{"by":"y-reversed"}},"displayName":"quarter"},"y":{"fieldName":"sum(total_sales)","scale":{"type":"quantitative"},"displayName":"Sum of total_sales"}},"frame":{"title":"Total Sales by Quarter","showTitle":true}}},"position":{"x":3,"y":0,"width":3,"height":6}},{"widget":{"name":"b105dffe","queries":[{"name":"main_query","query":{"datasetName":"abb91c01","fields":[{"name":"month","expression":"`month`"},{"name":"sum(total_sales)","expression":"SUM(`total_sales`)"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"month","scale":{"type":"quantitative"},"displayName":"month"},"y":{"fieldName":"sum(total_sales)","scale":{"type":"quantitative"},"displayName":"Sum of total_sales"}}}},"position":{"x":0,"y":6,"width":3,"height":6}},{"widget":{"name":"e770eb2b","queries":[{"name":"main_query","query":{"datasetName":"1d31dd56","fields":[{"name":"ORDERNUMBER","expression":"`ORDERNUMBER`"},{"name":"sum(total_sales)","expression":"SUM(`total_sales`)"}],"disaggregated":false}}],"spec":{"version":3,"widgetType":"bar","encodings":{"x":{"fieldName":"ORDERNUMBER","scale":{"type":"quantitative"},"displayName":"ORDERNUMBER"},"y":{"fieldName":"sum(total_sales)","scale":{"type":"quantitative"},"displayName":"Sum of total_sales"}},"frame":{"title":"Sales by Order Number","showTitle":true}}},"position":{"x":3,"y":6,"width":3,"height":6}}]}]}